{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","onClick","window","location","reload","map","answerOption","nextQuestion","handleAnswerOptionClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAGe,SAASA,IACvB,IAAMC,EAAY,CACjB,CACCC,aAAc,oCACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,wBACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,gBAAiBC,WAAW,GAC1C,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,uDACdC,cAAe,CACd,CAAEC,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,cAAeC,WAAW,KAG1C,CACCH,aAAc,8CACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAnCJ,EA0CiBC,mBAAS,GA1C1B,mBA0CtBC,EA1CsB,KA0CLC,EA1CK,OA6CKF,oBAAS,GA7Cd,mBA6CtBG,EA7CsB,KA6CXC,EA7CW,OAgDHJ,mBAAS,GAhDN,mBAgDtBK,EAhDsB,KAgDfC,EAhDe,KA0E7B,OACC,yBAAKC,UAAU,OAEbJ,EACA,yBAAKI,UAAU,iBAAf,cAEaF,EAFb,WAE4BV,EAAUa,OAErC,4BAAQD,UAAU,eAAeE,QAZrC,WACCC,OAAOC,SAASC,WAWb,IAAwD,6CAGxD,oCACC,yBAAKL,UAAU,oBACd,yBAAKA,UAAU,kBACd,0CAAgBN,EAAkB,GADnC,IAC8CN,EAAUa,QAGxD,yBAAKD,UAAU,iBAAiBZ,EAAUM,GAAiBL,eAE5D,yBAAKW,UAAU,kBACbZ,EAAUM,GAAiBJ,cAAcgB,KAAI,SAACC,GAAD,OAE7C,4BAAQL,QAAS,kBA7CQ,SAACV,GAE5BA,GACHO,EAASD,EAAQ,GAGlB,IAAMU,EAAed,EAAkB,EAGnCc,EAAepB,EAAUa,OAC5BN,EAAmBa,GAInBX,GAAa,GA+BeY,CAAwBF,EAAaf,aAAae,EAAahB,kBC9F9FmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACzB,EAAD,OAEF0B,SAASC,eAAe,U","file":"static/js/main.5db4a14e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of Indonesia?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yogyakarta', isCorrect: false },\n\t\t\t\t{ answerText: 'Bali', isCorrect: false },\n\t\t\t\t{ answerText: 'Jakarta', isCorrect: true },\n\t\t\t\t{ answerText: 'Palembang', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Google?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Sundar Pichai', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Which Marvel comic villain is an enemy of Spiderman?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Green Goblin', isCorrect: true },\n\t\t\t\t{ answerText: 'Joker', isCorrect: false },\n\t\t\t\t{ answerText: 'Lex Luthor', isCorrect: false },\n\t\t\t\t{ answerText: 'The Riddler', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Game of Thrones seasons are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '7', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '8', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\t// State object which will hold the current question number the user is on. \n\t// This will be initialised to 0 so the quiz takes the first question from the array\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\n\t// State object which will store wether we want to show the score screen or not\n\tconst [showScore, setShowScore] = useState(false);\n\n\t// State object which will save the score\n\tconst [score, setScore] = useState(0);\n\n\t// This function will get called when the user clicks an answer.\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\t// if isCorrect is true, update our score by 1 \n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\t\t// increment the current question value by one, save it to a new variable, and set this new variable into state\n\t\tconst nextQuestion = currentQuestion + 1;\n\n\t\t// If the next question number is less than the total number of questions, update the state to the next question. \n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t}\n\t\t// Else, weâ€™ve reached the end of the quiz, so show the score screen.\n\t\telse {\n\t\t\tsetShowScore(true);\n\t\t}\n\n\t};\n\t// Function to restart the quiz\n\tfunction restartQuiz() {\n\t\twindow.location.reload();\n\t}\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{/* If showScore is true, render the score section markup, else, render the quiz question/answer markup */}\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\t{/* Showing the score */}\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t\t{/* Retart quiz button */}\n\t\t\t\t\t<button className='restart-quiz' onClick={restartQuiz}> <span>Try Again</span></button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* Rendering the Question and Answers */}\n\t\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t\t// render a button for each answerOption, and display the text\n\t\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}